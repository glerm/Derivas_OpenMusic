; OM File Header - Saved 2013/11/06 20:14:13
; (6.070004 :patc (om-make-point 226 10) (om-make-point 0 0) (om-make-point 335 152) "" 183 0 "2013/11/06 11:13:35" "2013/11/06 11:14:15")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "Patch" (quote ((om-load-boxcall (quote abstraction) "OM->PDList" (om-load-patch-abs1 "OM->PDList" (quote ((om-load-boxcall (quote lispfun) "APPEND 5" (quote append) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 145 375) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "APPEND 4" (quote append) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (list 4)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (list ";")))) (om-make-point 185 303) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "APPEND 3" (quote append) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (list 3)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (list ";")))) (om-make-point 138 303) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "APPEND 2" (quote append) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (list 2)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (list ";")))) (om-make-point 92 302) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "APPEND" (quote append) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (list 1)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (list ";")))) (om-make-point 41 301) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "FOURTH" (quote fourth) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 187 233) nil nil "&" nil 1) (om-load-boxout "output" 0 (om-make-point 154 512) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil) (om-load-boxcall (quote genfun) "FLAT" (quote flat) (quote ((om-load-inputfun (quote input-funbox) "a list" "LST" nil))) (om-make-point 164 428) nil nil nil nil 1) (om-load-boxin "input" 0 (om-make-point 80 77) "" nil nil nil) (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 46 232) nil nil "&" nil 1) (om-load-boxcall (quote lispfun) "SECOND" (quote second) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 94 232) nil nil "&" nil 1) (om-load-boxcall (quote lispfun) "THIRD" (quote third) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 150 233) nil nil "&" nil 1))) (quote ((4 0 0 0 nil 0) (3 0 0 1 nil 0) (2 0 0 2 nil 0) (1 0 0 3 nil 0) (5 0 1 1 nil 0) (11 0 2 1 nil 0) (10 0 3 1 nil 0) (9 0 4 1 nil 0) (8 0 5 0 nil 0) (7 0 6 0 nil 0) (0 0 7 0 nil 0) (8 0 9 0 nil 0) (8 0 10 0 nil 0) (8 0 11 0 nil 0))) 6.070004 nil "" (om-make-point 200 200) (om-make-point 500 400)) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil))) (om-make-point 9 39) nil (list (list 1 7200 6000 4100 ";" 2 2900 6500 6800 ";" 3 4800 5300 5600 ";" 4 8000 ";")) nil "OM->PDList") (om-load-boxcomment "comment" (om-make-point 181 78) (quote "Ainda precisa tratar ponto $e virgula ou pensar numa$maneira de serializar $as mensagens") "" (om-make-point 78 38) nil (om-make-color 0 0 0) (om-make-font "Bitstream Vera Sans" 12 :family "Bitstream Vera Sans" :style (quote (:plain)) :mode (quote nil))))) (quote nil) nil 6.070004))
